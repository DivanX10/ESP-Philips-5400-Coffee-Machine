#Этот вариант без сервопривода и автоматического отвода воды от носика кофемашины
#Добавлены несколько примеров кофейного напитка, чтобы понимать куда и как добавлять свои любимые кофейные напитки


substitutions:
  board_name: Coffee Philips 5400
  node_name: coffee-philips-5400

esphome:
  name: ${node_name}
  friendly_name: coffee-philips-5400
  comment: ESP32 Coffee Philips 5400

esp32:
  board: esp32dev
  framework:
    type: arduino
    version: recommended

#Учетные данные Wi-Fi для подключения платы к домашней сети
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: off
  reboot_timeout: 15min

#Если не будет связи с WiFi, то поднимется точка доступа
  ap:
    ssid: ESP SmartCoffeePhilips
    password: !secret ap_esp_password

#Компонент captive portal в ESPHome является резервным механизмом на случай сбоя подключения к настроенному Wi-Fi.
captive_portal:

#Веб сервер выключен специально, так как кофемашина выключается самопроизвольно в любой момент
#web_server:
#  port: 80

#Журналирование
logger:
  level: ERROR #NONE
  baud_rate: 0

#Enable OTA
ota:
  password: "esphome"

#Enable Home Assistant API
#Шифрование выключил для снижения нагрузки на ESP
api:


#####################################################################################
################################## Внешний компонент ################################
external_components:
  - source:
      type: git
      url: https://github.com/DivanX10/ESP-Philips-5400-Coffee-Machine

#####################################################################################
######################################### UART ######################################
uart:
#UART подключение к панели управления. Считываем данные которые приходят от материнской плате в панель управления
 - id: uart_display
   rx_pin: GPIO16 #Считываем данные с панели управления
   tx_pin: GPIO17 #Посылаем данные в панель управления
   baud_rate: 115200
   stop_bits: 1
   data_bits: 8
   parity: NONE
   rx_buffer_size: 256

 - id: uart_mainboard
   rx_pin: GPIO14 #Считываем данные с материнской платы
   tx_pin: GPIO5 #Посылаем данные в материнскую плату
   baud_rate: 115200
   stop_bits: 1
   data_bits: 8
   parity: NONE
   rx_buffer_size: 256


#####################################################################################
################################ Подключенный компонент #############################
philips_series_5400:
  display_uart: uart_display
  mainboard_uart: uart_mainboard
  restore_value: true
  debug: true #Режим отладки. Если включить, то при выборе напитка, объема кофе, молока, порции, будет отображаться пакет рецептов
  id: philip 
  #Cенсоры публикации сообщений в текстовом виде. Чтобы сенсор отображался, расскоментируйте
  #B0_msg:
  #  name: Messge B0 #Системные сенсоры
  #B5_msg:
  #  name: Messge B5 #Счетчик объема кофе и молока для приготовления кофейных напитков
  #BA_msg:
  #  name: Messge BA #Не смог расшифровать
  90_msg: 
    name: Messge2 90 #Рецепты кофейных напитков
  #91_msg:
  #  name: Messge3 91 #Счетчик приготовления кофейных напитков
  #93_msg:
  #  name: Messge1 93 #Не смог расшифровать

#Настройки кофе
  Coffee_volume: #Объем кофе NUMBER
    name: Сoffee
    mode: box #slider/box
  Milk_volume: #Объем молока NUMBER
    name: Milk
    mode: box #slider/box
  Display_product: #Сенсор показывает какой кофейный напиток, объем кофе, объем молока, количество порции выбрали
    name: Coffee Drink
  Start_key: #Запуск приготовления кофейного напитка
    name: Build Coffee  
  Strength_select: #Помол SELECT. Если убрать options, то по умолчанию будет отображаться на английском языке, если хотите видеть на своем языке, то используйте options и укажите название на своем родном языке
    name: Grind
    options:
      - "Молотый"
      - "Мягкий"
      - "Средний"
      - "Крепкий"
  Cups_select: #Количество чашек SELECT. Если убрать options, то по умолчанию будет отображаться на английском языке, если хотите видеть на своем языке, то используйте options и укажите название на своем родном языке
    name: Cups
    options:
      - "1 чашка"
      - "2 чашки"
      - "Extra Shot"
  Product_select: #Выбор кофейного напитка SELECT. Если убрать options, то по умолчанию будет отображаться на английском языке, если хотите видеть на своем языке, то используйте options и укажите название на своем родном языке
    name: Drink
    options:
      - "Эспрессо"
      - "Кофе в дорогу"
      - "Кофе"
      - "Эспрессо лунго"
      - "Кафе крема"
      - "Ристретто"
      - "Американо"
      - "Кофе с молоком"
      - "Кофе латте"
      - "Кофе с молоком в дорогу"
      - "Латте макиато"
      - "Капучино"
      - "Молочная пена"
      - "Горячая вода"

  #Сенсор в который компонент публикует статус в цифровом виде
  state_sensor:
    name: Work State
    id: idControlSensor
    internal: True #Скрыть - True \показать - False
    on_value:
      then:
      - lambda: |-
          //Статус состояния кофемашины, включена или выключена
          if(x==2){
            id(idPowerStatus).publish_state(false);
          } else if(id(idPowerStatus).state==false){
            id(idPowerStatus).publish_state(true);
          }

          //AA:AA:AA:B0 "Системные сенсоры"
          if(x==21){
           id(idStatus).publish_state("Выберите напиток");
           id(idWater).publish_state("Вода есть");
           id(idPallet).publish_state("Вставлен");
           id(idGrainTray).publish_state("Зерна есть");
           id(idCoffeeGroundsContainer).publish_state("Пустой");
          }

          //AA:AA:AA:B0 "Статусы"
          else if(x==1){id(idStatus).publish_state("Что-то (07 01 00)");}
          else if(x==2){id(idStatus).publish_state("Выключено");}
          else if(x==3){id(idStatus).publish_state("Наливаем молоко");}
          else if(x==4){id(idStatus).publish_state("Наливаем кофе");}
          else if(x==5){id(idStatus).publish_state("Предварительное дозирование");}
          else if(x==6){id(idStatus).publish_state("Создание пара для молока");}
          else if(x==7){id(idStatus).publish_state("Заварочный узел в положение заваривания");}
          else if(x==8){id(idStatus).publish_state("Наслаждайтесь");}
          else if(x==9){id(idStatus).publish_state("Нагрев воды");}
          else if(x==10){id(idStatus).publish_state("Перемалываем зерна");}
          else if(x==11){id(idStatus).publish_state("Промывка");}
          else if(x==12){id(idGrainTray).publish_state("Зерна закончились");}
          else if(x==13){id(idStatus).publish_state("Что-то (07 08 14)");}
          else if(x==14){id(idStatus).publish_state("Нагревание");}
          else if(x==15){id(idStatus).publish_state("Наслаждайтесь");}
          else if(x==16){id(idStatus).publish_state("Что-то (07 0C 02)");}
          else if(x==17){id(idWater).publish_state("Вода есть");}
          else if(x==18){id(idPallet).publish_state("Вставлен");}
          else if(x==20){id(idCoffeeGroundsContainer).publish_state("Опорож. контейнер для коф. гущи");}
          else if(x==22){id(idWater).publish_state("Воды нет");}
          else if(x==23){id(idPallet).publish_state("Извлечен");}
          else if(x==24){id(idPallet).publish_state("Очистка от накипи. Шаг 1");}
          else if(x==25){id(idPallet).publish_state("Очистка от накипи. Шаг 2");}
          

          //AA:AA:AA:B5 "Error Code"
          else if(x==30){id(idErrorCode).publish_state("00");}
          else if(x==31){id(idErrorCode).publish_state("0B");}
          else if(x==32){id(idErrorCode).publish_state("E6");}
          else if(x==33){id(idErrorCode).publish_state("80");}
          else if(x==34){id(idErrorCode).publish_state("CB");}
          else if(x==35){id(idErrorCode).publish_state("FF");}
          else if(x==36){id(idErrorCode).publish_state("A0");}


#####################################################################################
################################## Бинарный сенсор ##################################
#Статус кофемашины: включена или выключена
binary_sensor:
  - platform: template
    name: "Power Status"
    id: idPowerStatus
    icon: mdi:power

#####################################################################################
################################## Сенсор ###########################################
sensor:
#Сенсор уровня сигнала WiFi
  - platform: wifi_signal
    name: RSSI WiFi
    icon: mdi:wifi
    update_interval: 60s

#Сенсор безотказной работы ESP
  - platform: uptime
    name: Uptime Sensor
    update_interval: 60s

#Сенсор встроенного датчика температуры в ESP 
  - platform: internal_temperature
    name: "Internal Temperature"
    icon: mdi:thermometer

#Cвободная память
  - platform: template
    name: Free Mem Size
    icon: mdi:memory
    entity_category: diagnostic
    lambda: |-
      #ifdef MALLOC_CAP_DEFAULT
         size_t freeValue = heap_caps_get_free_size(MALLOC_CAP_DEFAULT);
      #else
         size_t freeValue = ESP.getFreeHeap();
      #endif
      return freeValue;


#####################################################################################
################################### Текстовый сенсор ################################
text_sensor:
#Сенсор IP
  - platform: wifi_info
    ip_address:
      name: IP

#ESPHome Version
  - platform: version
    hide_timestamp: true
    name: "ESPHome Version"

#Контейнер воды
  - platform: template
    name: "Water"
    icon: mdi:cup-water
    id: idWater
    update_interval: never

#Контейнер кофейной гущи
  - platform: template
    name: "Coffee Grounds Container"
    icon: mdi:train-car-centerbeam-full
    id: idCoffeeGroundsContainer
    update_interval: never

#Поддон
  - platform: template
    name: "Coffee Pallet"
    icon: mdi:spirit-level
    id: idPallet
    update_interval: never

#Системные ошибки
  - platform: template
    name: "Error Code"
    icon: mdi:alert-circle-outline
    id: idErrorCode
    update_interval: never

#Кофейные зерна
  - platform: template
    name: "Grain Tray"
    icon: mdi:grain
    id: idGrainTray
    update_interval: never

#Статусы
  - platform: template
    name: "Status"
    icon: mdi:coffee-to-go
    id: idStatus
    update_interval: never


#####################################################################################
################################## Выключатель ######################################
switch:
#Скрытый выключатель для управления реле, для включения и выключения кофемашины
  - platform: gpio
    pin: GPIO26
    name: "Relay Switch"
    id: idRelaySwitch
    internal: True #Скрыть - True \показать - False
    restore_mode: ALWAYS_OFF #Всегда выключенный


#####################################################################################
####################################### Кнопка ######################################
button:
#Перезагрузка
  - platform: restart
    name: Restart
    icon: mdi:restart

#Включить кофемашину
  - platform: template
    name: "Power ON"
    icon: mdi:power
    on_press:
      - switch.turn_on: idRelaySwitch
      - delay: 1s
      - switch.turn_off: idRelaySwitch

#Выключить кофемашину
  - platform: template
    name: "Power OFF"
    icon: mdi:power
    on_press:
      #Включаем реле
      - switch.turn_on: idRelaySwitch
      #Задержка 2 секунды
      - delay: 2s
      #Выключаем реле
      - switch.turn_off: idRelaySwitch

#Дополнительная кнопка выключения кофемашины, на случай, если не выключается через основную кнопку выключения
  - platform: template
    name: "Power OFF AA:FE"
    icon: mdi:power
    on_press:
      #Посылаем команду для выключения кофемашины 
      - lambda: |-
          {
            uint8_t data[]={0xFE,0,0};
            id(philip)->send_packet_main(data,3);
          }


#####################################################################################
############################ Рецепты приготовления кофе #############################
#Напиток: Американо. Молотый. Кофе: 80 мл.
  - platform: template
    name: "Американо молотый 80ml"
    icon: mdi:coffee
    on_press:
      - lambda: |-
          {
            uint8_t data[]={0x01, 0x00, 0x00, 0x02, 0x03, 0x00, 0x28, 0x00, 0x28, 0x00};
            id(philip)->prepare(data);
          }

#Напиток: Кофе. Зерно: Максимум. Кофе: 150 мл.
  - platform: template
    name: "Кофе Max 150ml"
    icon: mdi:coffee
    on_press:
      - lambda: |-
          {
            uint8_t data[]={0x00, 0x03, 0x00, 0x02, 0x02, 0x00, 0x96, 0x00, 0x00, 0x00};
            id(philip)->prepare(data);
          }

#Напиток: Каппучино. Зерно: Максимум. Кофе: 60 мл. Молоко: 150 мл.
  - platform: template
    name: "Капучино Max 60/150ml"
    icon: mdi:coffee
    on_press:
      - lambda: |-
          {
            uint8_t data[]={0x03, 0x03, 0x00, 0x02, 0x03, 0x02, 0x3C, 0x00, 0x96, 0x00};
            id(philip)->prepare(data);
          }

#Напиток: Кофе с молоком. Зерно. Крепкий. Кофе: 150 мл. Молоко: 120 мл. 1 чашка
  - platform: template
    name: "Кофе с молоком Max 150/120ml"
    icon: mdi:coffee
    on_press:
      - lambda: |-
          {
            uint8_t data[]={0x02, 0x03, 0x00, 0x02, 0x01, 0x02, 0x96, 0x00, 0x78, 0x00};
            id(philip)->prepare(data);
          }

#Напиток: Кофе с молоком. Зерно: Extra Shot. Кофе: 150 мл. Молоко: 100 мл.
  - platform: template
    name: "Кофе с молоком Extra Shot 150/100ml"
    icon: mdi:coffee
    on_press:
      - lambda: |-
          {
            uint8_t data[]={0x02, 0x03, 0x02, 0x02, 0x01, 0x02, 0x96, 0x00, 0x64, 0x00};
            id(philip)->prepare(data);
          }


#####################################################################################
####################################### Время #######################################
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow

